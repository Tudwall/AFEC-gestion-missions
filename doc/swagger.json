{
	"openapi": "3.1.0",
	"info": {
		"title": "Gestionnaire de candidatures",
		"description": "Cette application permet à des associations de poster des missions, auxquelles des candidats peuvent postuler. Ces candidatures peuvent ensuite être acceptées ou refusées par les associations.",
		"version": "1.0"
	},
	"externalDocs": {
		"description": "Repository Github",
		"url": "https://github.com/Tudwall/AFEC-gestion-missions"
	},
	"servers": [
		{
			"url": "http://localhost:3000/"
		}
	],
	"tags": [
		{
			"name": "mission",
			"description": "Routes des missions",
			"externalDocs": {
				"description": "Find out more",
				"url": "http://swagger.io"
			}
		}
	],
	"paths": {
		"/mission/create": {
			"post": {
				"tags": ["mission"],
				"summary": "Créer une nouvelle mission",
				"description": "Permet de créer une nouvelle mission avec ses détails, date etc.",
				"operationId": "postMission",
				"requestBody": {
					"description": "Update an existent pet in the store",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Mission"
							}
						}
					},
					"required": true
				},
				"responses": {
					"201": {
						"description": "Requête réussie",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Mission"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/Mission"
								}
							}
						}
					},
					"400": {
						"description": "Mauvaise requête"
					},
					"403": {
						"description": "Non authentifié"
					}
				},
				"security": [
					{
						"petstore_auth": ["write:missions", "read:missions"]
					}
				]
			}
		},
		"/mission/": {
			"get": {
				"tags": ["mission"],
				"summary": "Récupération de la liste des missions",
				"description": "Récupération de la liste de toutes les missions disponibles",
				"operationId": "getAllMissions",
				"responses": {
					"200": {
						"description": "Requête réussie",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Mission"
									}
								}
							}
						}
					},
					"404": {
						"description": "Ressource introuvable"
					}
				},
				"security": [
					{
						"petstore_auth": ["write:pets", "read:pets"]
					}
				]
			}
		},
		"/mission/orgId/{orgId}": {
			"get": {
				"tags": ["mission"],
				"summary": "Recherche les missions selon d'id de l'association",
				"description": "Recherche les missions selon d'id de l'association qui l'a posté",
				"operationId": "getMissionByOrgid",
				"parameters": [
					{
						"name": "orgId",
						"in": "path",
						"description": "Id de l'association",
						"required": true,
						"explode": true,
						"schema": {
							"type": "integer",
							"default": "1"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Requête réussie",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Mission"
								}
							}
						}
					},
					"404": {
						"description": "Ressource introuvable"
					}
				},
				"security": [
					{
						"petstore_auth": ["write:pets", "read:pets"]
					}
				]
			}
		},
		"/mission/id/{id}": {
			"get": {
				"tags": ["mission"],
				"summary": "Recherche une mission par id",
				"description": "Recherche une mission par son id",
				"operationId": "getMissionById",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Id de la mission",
						"required": true,
						"explode": true,
						"schema": {
							"type": "integer",
							"default": 1
						}
					}
				],
				"responses": {
					"200": {
						"description": "Requête réussie",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Mission"
								}
							}
						}
					},
					"400": {
						"description": "Requête mal formulée"
					},
					"404": {
						"description": "Ressource introuvable"
					}
				},
				"security": [
					{
						"petstore_auth": ["write:pets", "read:pets"]
					}
				]
			}
		},
		"/mission/update/{id}": {
			"patch": {
				"tags": ["mission"],
				"summary": "Mettre à jour une mission",
				"operationId": "updateMission",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "id de la mission",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Mission mise à jour avec succès",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Mission"
								}
							}
						}
					},
					"400": {
						"description": "Requête mal formulée"
					},
					"404": {
						"description": "Ressource introuvable"
					}
				},
				"security": [
					{
						"api_key": []
					},
					{
						"petstore_auth": ["write:pets", "read:pets"]
					}
				]
			}
		},
		"/mission/delete/{id}": {
			"delete": {
				"tags": ["mission"],
				"summary": "Supprime une mission",
				"operationId": "deleteMission",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "id de la mission à supprimer",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Mission supprimée avec succès",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"petstore_auth": ["write:pets", "read:pets"]
					}
				]
			}
		}
	},
	"components": {
		"schemas": {
			"Order": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64",
						"examples": [10]
					},
					"petId": {
						"type": "integer",
						"format": "int64",
						"examples": [198772]
					},
					"quantity": {
						"type": "integer",
						"format": "int32",
						"examples": [7]
					},
					"shipDate": {
						"type": "string",
						"format": "date-time"
					},
					"status": {
						"type": "string",
						"description": "Order Status",
						"examples": ["approved"],
						"enum": ["placed", "approved", "delivered"]
					},
					"complete": {
						"type": "boolean"
					}
				},
				"xml": {
					"name": "order"
				}
			},
			"Customer": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64",
						"examples": [100000]
					},
					"username": {
						"type": "string",
						"examples": ["fehguy"]
					},
					"address": {
						"type": "array",
						"xml": {
							"name": "addresses",
							"wrapped": true
						},
						"items": {
							"$ref": "#/components/schemas/Address"
						}
					}
				},
				"xml": {
					"name": "customer"
				}
			},
			"Address": {
				"type": "object",
				"properties": {
					"street": {
						"type": "string",
						"examples": ["437 Lytton"]
					},
					"city": {
						"type": "string",
						"examples": ["Palo Alto"]
					},
					"state": {
						"type": "string",
						"examples": ["CA"]
					},
					"zip": {
						"type": "string",
						"examples": ["94301"]
					}
				},
				"xml": {
					"name": "address"
				}
			},
			"Category": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64",
						"examples": [1]
					},
					"name": {
						"type": "string",
						"examples": ["Dogs"]
					}
				},
				"xml": {
					"name": "category"
				}
			},
			"User": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64",
						"examples": [10]
					},
					"username": {
						"type": "string",
						"examples": ["theUser"]
					},
					"firstName": {
						"type": "string",
						"examples": ["John"]
					},
					"lastName": {
						"type": "string",
						"examples": ["James"]
					},
					"email": {
						"type": "string",
						"examples": ["john@email.com"]
					},
					"password": {
						"type": "string",
						"examples": ["12345"]
					},
					"phone": {
						"type": "string",
						"examples": ["12345"]
					},
					"userStatus": {
						"type": "integer",
						"description": "User Status",
						"format": "int32",
						"examples": [1]
					}
				},
				"xml": {
					"name": "user"
				}
			},
			"Tag": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64"
					},
					"name": {
						"type": "string"
					}
				},
				"xml": {
					"name": "tag"
				}
			},
			"Mission": {
				"required": ["title", "missionDetails", "missionDate", "orgId"],
				"type": "object",
				"properties": {
					"title": {
						"type": "string",
						"examples": ["Accueil de visiteurs"]
					},
					"missionDetails": {
						"type": "string",
						"examples": ["Accueillir les visiteurs dans le centre"]
					},
					"missionDate": {
						"type": "string",
						"examples": ["2025-03-11 00:00:00.000"]
					},
					"orgId": {
						"type": "integer",
						"examples": ["2"]
					}
				},
				"tags": {
					"type": "object",
					"items": {
						"$ref": "#/components/schemas/Tag"
					}
				},
				"status": {
					"type": "string",
					"description": "pet status in the store",
					"enum": ["available", "pending", "sold"]
				}
			},
			"ApiResponse": {
				"type": "object",
				"properties": {
					"code": {
						"type": "integer",
						"format": "int32"
					},
					"type": {
						"type": "string"
					},
					"message": {
						"type": "string"
					}
				}
			}
		},
		"requestBodies": {
			"Mission": {
				"description": "Pet object that needs to be added to the store",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/Mission"
						}
					}
				}
			},
			"UserArray": {
				"description": "List of user object",
				"content": {
					"application/json": {
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/User"
							}
						}
					}
				}
			}
		},
		"securitySchemes": {
			"petstore_auth": {
				"type": "oauth2",
				"flows": {
					"implicit": {
						"authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
						"scopes": {
							"write:pets": "modify pets in your account",
							"read:pets": "read your pets"
						}
					}
				}
			},
			"api_key": {
				"type": "apiKey",
				"name": "api_key",
				"in": "header"
			}
		}
	}
}
